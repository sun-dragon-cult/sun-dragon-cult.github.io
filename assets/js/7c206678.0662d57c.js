"use strict";(self.webpackChunksun_dragon_cult=self.webpackChunksun_dragon_cult||[]).push([[2907],{4923:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var r=n(5893),s=n(1151);const a={slug:"rqid",title:"RQG System ID (rqid)",tags:["rqg"]},o=void 0,i={id:"rqg-system/api/rqid",title:"RQG System ID (rqid)",description:'The RQG System manages content in different languages using the RQG System ID or "rqid".  Currently journals, actors &',source:"@site/docs/rqg-system/api/rqid.md",sourceDirName:"rqg-system/api",slug:"/rqg-system/api/rqid",permalink:"/docs/rqg-system/api/rqid",draft:!1,unlisted:!1,tags:[{label:"rqg",permalink:"/docs/tags/rqg"}],version:"current",frontMatter:{slug:"rqid",title:"RQG System ID (rqid)",tags:["rqg"]},sidebar:"quickStartSidebar",previous:{title:"Name Generator",permalink:"/docs/rqg-system/api/name-generator"},next:{title:"Combat Tab",permalink:"/docs/rqg-system/character-tab/combat"}},d={},c=[];function l(e){const t={code:"code",p:"p",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:'The RQG System manages content in different languages using the RQG System ID or "rqid".  Currently journals, actors &\nitems have full support for rqid. The id\'s are stored as flags on documents under the "rqg" scope as an object\n"documentRqidFlags" containing id, lang & priority properties.'}),"\n",(0,r.jsxs)(t.p,{children:["When a macro, module, or internal RQG system code, needs a specific document, for example a Broadsword or the journal\nentry describing dwarves, it can call ",(0,r.jsx)(t.code,{children:'await game.system.api.rqid.fromRqid("i.weapon.broadsword", "es")'}),", where the first\nparameter is the invariant rqid, and the second parameter is the requested language code. If you do not include a\nlanguage code, it will return the English language version of the item, and if you request a language other than english\nand the document is not found then a search for an English document is done as a fallback."]}),"\n",(0,r.jsx)(t.p,{children:'First the system looks for documents the user has created or imported into the world that have "rqid" and "lang" matching\nthe provided parameters. If it finds any documents, it will return the one with the highest priority. In this way the\nGame Master can import items and "override" the system.'}),"\n",(0,r.jsx)(t.p,{children:'If the system does not find any matching documents in the world, it will look through all the compendia for documents\nthat have a matching "rqid" and "lang", and it will return the one with the highest priority. This allows later RQG\ncontent packs to override older information. The GM can also use this to create compendium packs with documents that\noverride the ones provided by the system.'})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>i,a:()=>o});var r=n(7294);const s={},a=r.createContext(s);function o(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);