"use strict";(self.webpackChunksun_dragon_cult=self.webpackChunksun_dragon_cult||[]).push([[2907],{4923:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var r=n(5893),s=n(1151);const a={slug:"rqid",title:"RQG System ID (rqid)",tags:[]},i=void 0,o={id:"rqg-system/api/rqid",title:"RQG System ID (rqid)",description:'The RQG System manages content in different languages using the RQG System ID or "rqid". Currently',source:"@site/docs/rqg-system/api/rqid.md",sourceDirName:"rqg-system/api",slug:"/rqg-system/api/rqid",permalink:"/rqg-system/api/rqid",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{slug:"rqid",title:"RQG System ID (rqid)",tags:[]},sidebar:"rqgSidebar",previous:{title:"Name Generator",permalink:"/rqg-system/api/name-generator"},next:{title:"3rd party modules",permalink:"/rqg-system/addons/"}},d={},c=[];function l(e){const t={code:"code",p:"p",...(0,s.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:'The RQG System manages content in different languages using the RQG System ID or "rqid". Currently\njournals, actors & items have full support for rqid. The id\'s are stored as flags on documents under\nthe "rqg" scope as an object "documentRqidFlags" containing id, lang & priority properties.'}),"\n",(0,r.jsxs)(t.p,{children:["When a macro, module, or internal RQG system code, needs a specific document, for example a\nBroadsword or the journal entry describing dwarves, it can call\n",(0,r.jsx)(t.code,{children:'await game.system.api.rqid.fromRqid("i.weapon.broadsword", "es")'}),", where the first parameter is the\ninvariant rqid, and the second parameter is the requested language code. If you do not include a\nlanguage code, it will return the English language version of the item, and if you request a\nlanguage other than english and the document is not found then a search for an English document is\ndone as a fallback."]}),"\n",(0,r.jsx)(t.p,{children:'First the system looks for documents the user has created or imported into the world that have\n"rqid" and "lang" matching the provided parameters. If it finds any documents, it will return the\none with the highest priority. In this way the Game Master can import items and "override" the\nsystem.'}),"\n",(0,r.jsx)(t.p,{children:'If the system does not find any matching documents in the world, it will look through all the\ncompendia for documents that have a matching "rqid" and "lang", and it will return the one with the\nhighest priority. This allows later RQG content packs to override older information. The GM can also\nuse this to create compendium packs with documents that override the ones provided by the system.'})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>i});var r=n(7294);const s={},a=r.createContext(s);function i(e){const t=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(a.Provider,{value:t},e.children)}}}]);