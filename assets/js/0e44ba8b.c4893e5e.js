"use strict";(self.webpackChunksun_dragon_cult=self.webpackChunksun_dragon_cult||[]).push([[2531],{6448:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>a,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var t=n(2676),s=n(4599);const r={slug:"rqid",title:"RQG System ID (rqid)",tags:[]},a=void 0,l={id:"rqg-system/api/rqid",title:"RQG System ID (rqid)",description:"What is it for",source:"@site/docs/rqg-system/api/rqid.mdx",sourceDirName:"rqg-system/api",slug:"/rqg-system/api/rqid",permalink:"/rqg-system/api/rqid",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{slug:"rqid",title:"RQG System ID (rqid)",tags:[]},sidebar:"rqgSidebar",previous:{title:"Name Generator",permalink:"/rqg-system/api/name-generator"},next:{title:"3rd party modules",permalink:"/rqg-system/addons/"}},d={},o=[{value:"What is it for",id:"what-is-it-for",level:2},{value:"What are the parts",id:"what-are-the-parts",level:2},{value:"Search priorities",id:"search-priorities",level:2},{value:"Current usage in the system",id:"current-usage-in-the-system",level:2},{value:"1. Open the &quot;best&quot; description of skills, spells etc",id:"1-open-the-best-description-of-skills-spells-etc",level:3},{value:"2. Identify &quot;special&quot; skills",id:"2-identify-special-skills",level:3},{value:"3. Specify what hit locations each armor piece protects",id:"3-specify-what-hit-locations-each-armor-piece-protects",level:3},{value:"4. Link Rune magic spells to runes",id:"4-link-rune-magic-spells-to-runes",level:3},{value:"5. Link Sorcery spells (skills) to runes",id:"5-link-sorcery-spells-skills-to-runes",level:3},{value:"6. Rune links",id:"6-rune-links",level:3},{value:"7. Active Effects",id:"7-active-effects",level:3},{value:"Using it from a macro",id:"using-it-from-a-macro",level:2},{value:"Changing language in a world",id:"changing-language-in-a-world",level:2}];function h(e){const i={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components},{Details:n}=i;return n||function(e,i){throw new Error("Expected "+(i?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h2,{id:"what-is-it-for",children:"What is it for"}),"\n",(0,t.jsxs)(i.p,{children:['The RQG System manages content in different languages and different compendiums or in the world by\nusing a RQG System ID or "rqid". The id\'s are stored as flags on documents under the "rqg" scope as\nan object "documentRqidFlags" containing ',(0,t.jsx)(i.strong,{children:"id"}),", ",(0,t.jsx)(i.strong,{children:"lang"})," & ",(0,t.jsx)(i.strong,{children:"priority"})," properties."]}),"\n",(0,t.jsx)(i.p,{children:'A rqid is not a unique id, instead it defines what "kind" a document is. The purpose is to let\ndifferent versions of the same document coexist so the "best" version can be used. A "kind" can be\nsomething like a specific skill like "Dodge", or a description of a specific spell. It also defines\nwhat language the document is written in, and it has a priority that ranks documents with the same\nid and language (higher is better).'}),"\n",(0,t.jsxs)(i.p,{children:["An advantage of using rqid for links between documents is that the risk of broken links are greatly\nreduced, compared to linking documents using the Foundry Uuid. If a link is broken you just need to\neither make sure a document matching the requested rqid once again is available in your world or in\na compendium, or change the link to some other rqid that exists. See\n",(0,t.jsx)(i.a,{href:"/rqg-system/api/rqid#current-usage-in-the-system",children:"Current usage in the system"})," for details on what\nit's currently used for."]}),"\n",(0,t.jsx)(i.p,{children:"If you want to link to a specific instance of a document you should use the Foundry uuid instead."}),"\n",(0,t.jsx)(i.h2,{id:"what-are-the-parts",children:"What are the parts"}),"\n",(0,t.jsxs)(i.p,{children:["A normal rqid comes in 3 parts separated by dots ",(0,t.jsx)(i.code,{children:"."})," like this: ",(0,t.jsx)(i.code,{children:"i.skill.fast-talk"}),". It should be\nall lower case letters without any spaces."]}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"The first part is an abbreviated document type, see below. It supports many different document\ntypes, but the system only uses links to items and journals so far."}),"\n"]}),"\n",(0,t.jsxs)(n,{children:[(0,t.jsx)("summary",{children:"Document type abbreviation table"}),(0,t.jsxs)(i.table,{children:[(0,t.jsx)(i.thead,{children:(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.th,{}),(0,t.jsx)(i.th,{children:"Foundry Document Type"})]})}),(0,t.jsxs)(i.tbody,{children:[(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"a"})}),(0,t.jsx)(i.td,{children:"Actor"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"c"})}),(0,t.jsx)(i.td,{children:"Cards"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"i"})}),(0,t.jsx)(i.td,{children:"Item"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"je"})}),(0,t.jsx)(i.td,{children:"JournalEntry"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"jp"})}),(0,t.jsxs)(i.td,{children:["JournalEntryPage ",(0,t.jsx)(i.em,{children:"(Only allowed as embedded in JournalEntry)"})]})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"m"})}),(0,t.jsx)(i.td,{children:"Macro"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"p"})}),(0,t.jsx)(i.td,{children:"Playlist"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"rt"})}),(0,t.jsx)(i.td,{children:"RollTable"})]}),(0,t.jsxs)(i.tr,{children:[(0,t.jsx)(i.td,{children:(0,t.jsx)(i.strong,{children:"s"})}),(0,t.jsx)(i.td,{children:"Scene"})]})]})]})]}),"\n",(0,t.jsxs)(i.ol,{start:"2",children:["\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:["The second part is the document subtype if there is any. In RQG there are a number of item types\nlike ",(0,t.jsx)(i.code,{children:"skill"}),", ",(0,t.jsx)(i.code,{children:"hit-location"})," and ",(0,t.jsx)(i.code,{children:"rune"})," etc."]}),"\n"]}),"\n",(0,t.jsxs)(i.li,{children:["\n",(0,t.jsxs)(i.p,{children:["The third part is usually related to the name of the document in english. If it is a journal\nentry for example is describing the spell bladesharp (rqid ",(0,t.jsx)(i.code,{children:"i.spirit-magic.bladesharp"}),"), it can\nbe called ",(0,t.jsx)(i.code,{children:"je..bladesharp"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(i.admonition,{title:"rqids for embedded documents",type:"info",children:(0,t.jsxs)(i.p,{children:["There is also a possibility to link to a document that is embedded. This is mostly useful for adding\na link to a journal entry page inside a journal entry. The rqid for that can look like this\n",(0,t.jsx)(i.code,{children:"je..spells.jp..ignite"})," where the first section (",(0,t.jsx)(i.code,{children:"je..spells"}),") defines what document it is, and the\nappended section (",(0,t.jsx)(i.code,{children:"jp..ignite"}),") defines what embedded document to find inside that document."]})}),"\n",(0,t.jsx)(i.h2,{id:"search-priorities",children:"Search priorities"}),"\n",(0,t.jsx)(i.p,{children:'The available documents matching "rqid" and "lang" will be searched, and it will return the one with\nthe highest priority. This allows later RQG content packs to override older information. The GM can\nalso use this to create compendium packs with documents that override the ones provided by the\nsystem.'}),"\n",(0,t.jsxs)(i.p,{children:["A search for a document can look like this:\n",(0,t.jsx)(i.code,{children:'await game.system.api.rqid.fromRqid("i.skill.act", "es")'})," to find the best available act skill in\nSpanish."]}),"\n",(0,t.jsx)(i.p,{children:"The priorities are:"}),"\n",(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsx)(i.li,{children:"The id has to match the query"}),"\n",(0,t.jsx)(i.li,{children:"The language - either the one specified in the query, the world language (as in the setting) or\nthe fallback language (english)"}),"\n",(0,t.jsx)(i.li,{children:"The found document is in the world - documents in compendium are only searched if no match is\nfound in imported world documents."}),"\n"]}),"\n",(0,t.jsxs)(i.admonition,{type:"danger",children:[(0,t.jsx)(i.p,{children:'Currently, any document in the world will have a higher "effective" priority compared to a document\nin a compendium, even if the priority value is lower.'}),(0,t.jsx)(i.p,{children:"It's under consideration to change this so the priority is honored no matter where the document is\nlocated."})]}),"\n",(0,t.jsxs)(n,{children:[" ",(0,t.jsx)("summary",{children:"Examples of priorities and search results"}),(0,t.jsxs)(i.p,{children:["A spell item has a rqid link ",(0,t.jsx)(i.code,{children:"je..befuddle"})," to a journal entry that describes that spell. When a\nplayer clicks the link a search is done to find the best match."]}),(0,t.jsx)(i.p,{children:"Suppose these journal entries describing some spirit magic spells exist:"}),(0,t.jsxs)(i.ol,{children:["\n",(0,t.jsxs)(i.li,{children:["rqid: ",(0,t.jsx)(i.code,{children:"je..befuddle"}),", language: ",(0,t.jsx)(i.code,{children:"en"}),", priority: ",(0,t.jsx)(i.code,{children:"0"})," ",(0,t.jsx)(i.em,{children:"(from the wiki module)"})]}),"\n",(0,t.jsxs)(i.li,{children:["rqid: ",(0,t.jsx)(i.code,{children:"je..befuddle"}),", language: ",(0,t.jsx)(i.code,{children:"en"}),", priority: ",(0,t.jsx)(i.code,{children:"1000"})," ",(0,t.jsx)(i.em,{children:"(from a future english Red Book of Magic\nmodule)"})]}),"\n",(0,t.jsxs)(i.li,{children:["rqid: ",(0,t.jsx)(i.code,{children:"je..befuddle"}),", language: ",(0,t.jsx)(i.code,{children:"es"}),", priority: ",(0,t.jsx)(i.code,{children:"0"})," ",(0,t.jsx)(i.em,{children:'(from a custom "translation to Spanish"\nmodule)'})]}),"\n",(0,t.jsxs)(i.li,{children:["rqid: ",(0,t.jsx)(i.code,{children:"je..demoralize"}),", language: ",(0,t.jsx)(i.code,{children:"en"}),", priority: ",(0,t.jsx)(i.code,{children:"0"})," ",(0,t.jsx)(i.em,{children:"(from the wiki module)"})]}),"\n",(0,t.jsxs)(i.li,{children:["rqid: ",(0,t.jsx)(i.code,{children:"je..demoralize"}),", language: ",(0,t.jsx)(i.code,{children:"en"}),", priority: ",(0,t.jsx)(i.code,{children:"1000"})," ",(0,t.jsx)(i.em,{children:"(from a future english Red Book of\nMagic module)"})]}),"\n"]}),(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["A search for ",(0,t.jsx)(i.code,{children:'fromRqid("je..befuddle", "en")'})," would return journal entry 2, since that has the\nhighest priority."]}),"\n",(0,t.jsxs)(i.li,{children:["A search for ",(0,t.jsx)(i.code,{children:'fromRqid("je..befuddle", "es")'})," would return journal entry 3 even though journal\nentry 2 has a higher priority since the language is more important than the priority."]}),"\n",(0,t.jsxs)(i.li,{children:["A search for ",(0,t.jsx)(i.code,{children:'fromRqid("je..demoralize", "es")'})," would return journal entry 5 since there is no\nspanish version with that rqid, but the fallback language is english, and journal entry 5 has a\nhigher priority compared to journal entry 4."]}),"\n"]})]}),"\n",(0,t.jsx)(i.h2,{id:"current-usage-in-the-system",children:"Current usage in the system"}),"\n",(0,t.jsx)(i.h3,{id:"1-open-the-best-description-of-skills-spells-etc",children:'1. Open the "best" description of skills, spells etc'}),"\n",(0,t.jsx)(i.p,{children:'A number of RQG items have a "rqidLink" to a journal entry description. The advantage of this is\nthat the "best" version will be opened. For example if you only have the wiki module installed then\nthat (limited) description will be opened. If you in the future install a premium module that\ncontains a more elaborated description with the same rqid, but higher priority, then that will be\nopened instead.'}),"\n",(0,t.jsx)(i.p,{children:"This can also be used to change what language version is opened, since the world language setting is\ntried first. If no description is found in that language the english version is opened (if that\nexists)."}),"\n",(0,t.jsx)(i.admonition,{title:"For reference, these RQG items that have a rqid description link",type:"note",children:(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"Cult"}),"\n",(0,t.jsx)(i.li,{children:"Rune"}),"\n",(0,t.jsx)(i.li,{children:"Rune Magic"}),"\n",(0,t.jsx)(i.li,{children:"Spirit Magic"}),"\n"]})}),"\n",(0,t.jsxs)(i.admonition,{title:"discussion",type:"note",children:[(0,t.jsx)(i.p,{children:"Removing the world language setting and relying on the user language is probably a bad idea since it\ncould make it hard to know what the players actually will see."}),(0,t.jsx)(i.p,{children:"For example a game played in Spanish where one player has selected Swedish as the Foundry language\nwould mean that the Swedish user would get the default English versions of any linked journal\nentries - and they might not match the journals the GM has prepared."}),(0,t.jsx)(i.p,{children:"I think it's natural that a game is played in one language (matching the world language setting) and\nthat all players see the documents in that language. Then again you could argue that since there is\na user language setting in Foundry, and since that will affect the Foundry interface language, it\nmight make sense to use that instead."})]}),"\n",(0,t.jsx)(i.h3,{id:"2-identify-special-skills",children:'2. Identify "special" skills'}),"\n",(0,t.jsx)(i.p,{children:"There are a few skills that need special handling, and these are identified by the system by looking\nat the rqid of the skills. This allows the name of these skills to be translated into any language."}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:["dodge: ",(0,t.jsx)(i.code,{children:"i.skill.dodge"}),","]}),"\n",(0,t.jsxs)(i.li,{children:["jump: ",(0,t.jsx)(i.code,{children:"i.skill.jump"}),","]}),"\n",(0,t.jsxs)(i.li,{children:["moveQuietly: ",(0,t.jsx)(i.code,{children:"i.skill.move-quietly"}),","]}),"\n",(0,t.jsxs)(i.li,{children:["spiritCombat: ",(0,t.jsx)(i.code,{children:"i.skill.spirit-combat"}),","]}),"\n"]}),"\n",(0,t.jsx)(i.h3,{id:"3-specify-what-hit-locations-each-armor-piece-protects",children:"3. Specify what hit locations each armor piece protects"}),"\n",(0,t.jsx)(i.p,{children:"Armor items needs to specify what hit locations they protect. This is accomplished by a list of\nrqids for hit location items. When a piece of armor is embedded in an actor and equipped, the\nembedded hit location items that matches the rqids in the armor item is found and the protection is\napplied."}),"\n",(0,t.jsxs)(i.p,{children:["Note that this usage of rqid does not use the language, instead it only searches for the rqids in\nthe embedded items of the actor using the ",(0,t.jsx)(i.code,{children:"actor.getBestEmbeddedDocumentByRqid(rqid)"})," function on\nthe RqgActor class."]}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.em,{children:"The list of available hit-locations is indexed at startup, see green box further down."})}),"\n",(0,t.jsx)(i.h3,{id:"4-link-rune-magic-spells-to-runes",children:"4. Link Rune magic spells to runes"}),"\n",(0,t.jsx)(i.p,{children:"Rune Magic spells have a list of rune rqids to identify what runes they can be cast with. When the\nspell is cast the rqids are used to find the rune items that are embedded in the actor to figure out\nsuccess chances."}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.em,{children:"The list of available runes is indexed at startup, see green box further down."})}),"\n",(0,t.jsx)(i.h3,{id:"5-link-sorcery-spells-skills-to-runes",children:"5. Link Sorcery spells (skills) to runes"}),"\n",(0,t.jsx)(i.admonition,{type:"danger",children:(0,t.jsxs)(i.p,{children:["Support for sorcery is still alpha level and ",(0,t.jsx)(i.strong,{children:"will"})," change, see\n",(0,t.jsx)(i.a,{href:"/rqg-system/character-sheet/sorcery",children:"Sorcery"}),"."]})}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.em,{children:"The list of available runes is indexed at startup, see green box further down."})}),"\n",(0,t.jsx)(i.h3,{id:"6-rune-links",children:"6. Rune links"}),"\n",(0,t.jsx)(i.p,{children:'Runes use rqid to define what the minor and opposite runes are for a particular rune. Currently only\nthe "opposite" rune link is used for finding what other Power rune to adjust when a Power runes\nchance is adjusted.'}),"\n",(0,t.jsx)(i.p,{children:(0,t.jsx)(i.em,{children:"The list of available runes is indexed at startup, see green box further down."})}),"\n",(0,t.jsx)(i.h3,{id:"7-active-effects",children:"7. Active Effects"}),"\n",(0,t.jsx)(i.admonition,{type:"danger",children:(0,t.jsx)(i.p,{children:"The RQG Active Effects implementation is still alpha level and could change completely, possibly\nwithout a migration for any active effects in current worlds."})}),"\n",(0,t.jsxs)(i.p,{children:["The RQG system specific way of adding Foundry active effects to embedded items is to add a ",(0,t.jsx)(i.code,{children:"Custom"}),'\nactive effect where the "Attribute Key" is following the format ',(0,t.jsx)(i.code,{children:"<rqid:path>"}),'. For example the\nsystem supplied "protection" token effects use this to add natural armor to an actor. This is\ncurrently done by adding a list of Active Effects like ',(0,t.jsx)(i.code,{children:"i.hit-location.head:system.naturalAp"})," for\neach humanoid hit location."]}),"\n",(0,t.jsx)(i.admonition,{title:"Possible future improvement",type:"note",children:(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsxs)(i.li,{children:['This could be improved if the rqid part could contain partial rqids. In the example above a\n"natural armor" active effect could then be described by a single effect like\n',(0,t.jsx)(i.code,{children:"i.hit-location.:system.naturalAp"})," and it would affect all hit locations embedded in an actor."]}),"\n",(0,t.jsx)(i.li,{children:'It\'s also currently only possible to add values, since the "CUSTOM" change mode is used to\ndescribe that an item should be affected. Making use of the normal Change Modes like "ADD",\n"SUBTRACT", "MULTIPLY", etc. could improve the usability further.'}),"\n"]})}),"\n",(0,t.jsxs)(i.admonition,{title:"Runes and hit location items in compendiums are indexed at startup (usage 3-5)",type:"tip",children:[(0,t.jsx)(i.p,{children:"When (re)loading the browser all compendiums containing all rune and hit location items are indexed\nand lists of all unique runes / hit locations that are available are compiled. The world language is\nused to select what language should be part of the list, and the highest priority item that matched\nthe world language for each rqid is kept. These lists are used to populate dropdowns of available\nrunes / hit locations."}),(0,t.jsx)(i.p,{children:"Please note that world runes / hit locations are not part of this indexing, so if you want to add\nmore runes or hit locations than are provided by the wiki module, then you need to put the extra\nitems in a compendium pack of your own."})]}),"\n",(0,t.jsx)(i.h2,{id:"using-it-from-a-macro",children:"Using it from a macro"}),"\n",(0,t.jsxs)(i.p,{children:["When a macro or module, needs a specific document, for example a Broadsword or the journal entry\ndescribing dwarves, it can call ",(0,t.jsx)(i.code,{children:'await game.system.api.rqid.fromRqid("i.weapon.broadsword", "es")'}),',\nwhere the first parameter is the invariant rqid, and the second parameter is the requested language\ncode. If you do not include a language code, it will use the language from the setting "world\nlanguage" when searching for the document. If the document is not available in the requested\nlanguage it will try to find it in English as a fallback before giving up.']}),"\n",(0,t.jsxs)(i.admonition,{title:"Not Yet Implemented - TODO \u26a0\ufe0f",type:"danger",children:[(0,t.jsx)(i.h2,{id:"changing-language-in-a-world",children:"Changing language in a world"}),(0,t.jsx)(i.p,{children:"Actors and items embedded in an actor will not be changed even if you switch language in the world\nlanguage setting, or activate a module that contains higher priority versions of the same items."}),(0,t.jsx)(i.p,{children:'It should be possible to "migrate" a world to a different language. Or change an English module to\nuse for example Spanish item names.'}),(0,t.jsx)(i.p,{children:"It's probably only reasonable to let such a migration affect world items?"}),(0,t.jsx)(i.p,{children:"Possible ways this could be done:"}),(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"A script that goes through all world actors and the embedded items, and for each item overwrites\nthe name and possibly other properties from the item with the same rqid, but matching the world\nlanguage."}),"\n",(0,t.jsx)(i.li,{children:'A way to migrate a specific actor, maybe with an "upgrade" button on the actor sheet in edit mode\nthat searches for the best version of each embedded item and overwrites selected properties from\nthere.'}),"\n"]})]})]})}function c(e={}){const{wrapper:i}={...(0,s.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},4599:(e,i,n)=>{n.d(i,{Z:()=>l,a:()=>a});var t=n(5271);const s={},r=t.createContext(s);function a(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function l(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);